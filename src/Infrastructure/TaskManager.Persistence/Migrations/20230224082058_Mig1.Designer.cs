// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManager.Persistence.Context;

namespace TaskManager.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230224082058_Mig1")]
    partial class Mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskManager.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.SH_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CellPhone")
                        .HasColumnType("varchar(10)");

                    b.Property<Guid?>("ChangedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("IdCity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTown")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("varchar(11)");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedId");

                    b.ToTable("SH_User");
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.UT_Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChangedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ChangedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code2")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Code3")
                        .HasColumnType("varchar(3)");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedId");

                    b.ToTable("UT_Country");
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.Product", b =>
                {
                    b.HasOne("TaskManager.Domain.Entities.SH_User", "Created")
                        .WithMany()
                        .HasForeignKey("CreatedId");

                    b.Navigation("Created");
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.SH_User", b =>
                {
                    b.HasOne("TaskManager.Domain.Entities.SH_User", "Created")
                        .WithMany()
                        .HasForeignKey("CreatedId");

                    b.Navigation("Created");
                });

            modelBuilder.Entity("TaskManager.Domain.Entities.UT_Country", b =>
                {
                    b.HasOne("TaskManager.Domain.Entities.SH_User", "Created")
                        .WithMany()
                        .HasForeignKey("CreatedId");

                    b.Navigation("Created");
                });
#pragma warning restore 612, 618
        }
    }
}
